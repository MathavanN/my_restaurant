name: Code coverage
 
on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]
 
jobs:
  code_cover:
    
    runs-on: ubuntu-latest
 
    steps:
      - uses: actions/checkout@v2
      - name: Start MSSQL in docker
        run: |
          docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=MyStr@ngPassw0rd" -e "MSSQL_PID=Developer" -p 1433:1433 -d mcr.microsoft.com/mssql/server:2019-CU10-ubuntu-16.04
      - name: Wait for SqlServer Container
        uses: jakejarvis/wait-action@master
        with:
          time: '10s'
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
           dotnet-version: 5.0.x
      - name: Service Project coverage report
        run: |
          dotnet test ./MyRestaurant.Services.Tests/MyRestaurant.Services.Tests.csproj /p:CollectCoverage=true /p:CoverletOutput=${{ github.workspace }}/coverage/Service.info /p:CoverletOutputFormat=lcov
      - name: Seed Data Project coverage report
        run: |
          dotnet test ./MyRestaurant.SeedData.Tests/MyRestaurant.SeedData.Tests.csproj /p:CollectCoverage=true /p:CoverletOutput=${{ github.workspace }}/coverage/SeedData.info /p:CoverletOutputFormat=lcov
      - name: Business Project coverage report
        run: |
          dotnet test ./MyRestaurant.Business.Tests/MyRestaurant.Business.Tests.csproj /p:CollectCoverage=true /p:CoverletOutput=${{ github.workspace }}/coverage/Business.info /p:CoverletOutputFormat=lcov 
      - name: API Project coverage report
        run: |
          dotnet test ./MyRestaurant.Api.Tests/MyRestaurant.Api.Tests.csproj /p:CollectCoverage=true /p:CoverletOutput=${{ github.workspace }}/coverage/Api.info /p:CoverletOutputFormat=lcov
      - name: Publish Business Project coverage report to codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ github.workspace }}/coverage/Service.info,${{ github.workspace }}/coverage/SeedData.info,${{ github.workspace }}/coverage/Business.info,${{ github.workspace }}/coverage/Api.info
          directory: ${{ github.workspace }}/coverage/
      - name: Install SonarCloud scanner
        run: dotnet tool install --global dotnet-sonarscanner
      - name: Begin Sonar scan
        run: |
          dotnet-sonarscanner begin /k:"MathavanN_my_restaurant" \
                                    /o:"mathavana-github" \
                                    /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
                                    /d:sonar.coverage.exclusions="**Test*.cs" \
                                    /d:sonar.cs.opencover.reportsPaths=${{ github.workspace }}/coverage/*.info \
                                    /d:sonar.host.url="https://sonarcloud.io"
      - name: Build
        run: |
          dotnet build --configuration Release --no-restore
      - name: End Sonar scan
        run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
